<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAttack</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set start time
event_inherited();
startTime = 1100;
endTime = 1240;

targetX = room_width / 2;
targetY = room_height / 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (running)
{
    counter = global.avTimer - startTime;
    //destroy bullets outside room on the first frame
    if (counter == 1) with (objRockBreakShot)
    {
        if (x &lt; 10 || x &gt; room_width - 10 || y &lt; 10 || y &gt; room_height - 10) instance_destroy();
    }
    
    //big rock grows in the middle
    var timeToGrow = 100;
    if (counter &lt;= timeToGrow)
    {
        with (objBigRock)
        {
            image_xscale += 2 / timeToGrow;
            image_yscale += 2 / timeToGrow;
        }
    }
    
    if (counter &lt; 50)
    {
        if (counter mod 2 == 1) with (objRockBreakShot) speed *= 0.8;
    }
    else if (counter &lt; 70)
    {
        with (objRockBreakShot)
        {
            speed = 0;
            var diff = angle_difference(direction, point_direction(x, y, other.targetX, other.targetY));
            direction -= min(abs(diff), 9) * sign(diff);
        } 
    }
    else
    {
        if (counter mod 3 == 0)
        {
            with (objRockBreakShot) speed++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
