<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAttack</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize vars
event_inherited();
startTime = 5901;
endTime = 6500;

laserInterval = 50;
radius = 200;
numRocks = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (running)
{    
    if (counter == 0) //spawn ring of rocks
    {
        for (var i = 0; i &lt; numRocks; i++)
        {
            var rock = instance_create(0, 0, objRockP);
            rock.curveType = 1;
            rock.rootX = room_width/2;
            rock.rootY = room_height/2;
            rock.scaleX = 550;
            rock.scaleY = 550;
            rock.rotation = i*360/numRocks;
            rock.tSpeed = 0.01;
            rock.image_xscale = 1.5;
            rock.image_yscale = 1.5;
            
            innerRing[i] = rock;
        }
        
        for (var i = 0; i &lt; numRocks*1.5; i++) //spawn fast outside ring
        {
            var rock = instance_create(0, 0, objRockP);
            rock.curveType = 1;
            rock.rootX = room_width/2;
            rock.rootY = room_height/2;
            rock.scaleX = 580;
            rock.scaleY = 580;
            rock.rotation = i*360/numRocks;
            rock.tSpeed = -0.03;
            
            outerRing[i] = rock;
        }
    }
    else if (counter &lt; 200)
    {
        var sSpeed = (innerRing[0].scaleX - radius)/(200 - counter);
        for (var i = 0; i &lt; array_length_1d(innerRing); i++)
        {
            innerRing[i].scaleX -= sSpeed;
            innerRing[i].scaleY -= sSpeed;
        }
        sSpeed = (outerRing[0].scaleX - radius - 40)/(200 - counter);
        for (var i = 0; i &lt; array_length_1d(outerRing); i++)
        {
            outerRing[i].scaleX -= sSpeed;
            outerRing[i].scaleY -= sSpeed;
        }
    }
    
    with (objRockP) blendColor = global.blendColor;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
