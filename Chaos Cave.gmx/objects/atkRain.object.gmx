<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAttack</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize vars
event_inherited();
startTime = 1;
endTime = 1100;
angle = 270;
spawnDistance = 400;
shotInterval = 10;
atPlayerInterval = 4;
playerArea = 100;
currentGlow = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objBlockGlow) lifetime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (running)
{
    if (counter mod 3 == 0) angle--;
    
    if (counter mod shotInterval == 0)
    {
        var bulletAngle = angle;
        var i = 0;
        if (counter &gt; 550) i = 1; //make two opposite streams if far enough into attack
        for (; i &gt;= 0; i--)
        {
            var bullet = instance_create(0, 0, objRockBreakShot);
            bullet.direction = bulletAngle;
            bullet.x = objPlayer.x;
            bullet.y = objPlayer.y;
            var angleRad = degtorad(-bulletAngle);
            var angleRight = angleRad + (pi / 2);
    
            //shift bullet to the side a random amount
            var randDist = 0;
            //at specific intervals, shoot a bullet near the player
            if (counter mod (shotInterval*atPlayerInterval) == 0) randDist = random_range(-playerArea, playerArea);
            else
            {
                //make sure bullet isn't too close to player if we don't want it to
                while (randDist &lt; playerArea &amp;&amp; randDist &gt; -playerArea) randDist = random_range(-playerArea - 250, playerArea + 250);
            }

            bullet.x += cos(angleRight) * randDist;
            bullet.y += sin(angleRight) * randDist;
            
            //find spot outside of the room to spawn bullet
            while (bullet.x &gt; 0 &amp;&amp; bullet.x &lt; room_width &amp;&amp; bullet.y &gt; 0 &amp;&amp; bullet.y &lt; room_height)
            {
                bullet.x -= cos(angleRad) * 50;
                bullet.y -= sin(angleRad) * 50;
            }
    
            bullet.speed = random_range(5, 8);
            
            bulletAngle -= 180;
        }
    }
    
    if (counter == 0 || counter == 550) //spawn bursts
    {
        var nextX = 0;
        while (nextX &lt; 690)
        {
            nextX += random_range(90, 100);
            var bullet = instance_create(nextX, 0, objStoneBullet);
            bullet.direction = random_range(265, 275);
            bullet.speed = random_range(6, 9);
            bullet.glowAlpha = random_range(0.3, 0.5);
            bullet.blendColor = $3030ee;
            bullet.pColor = $3030ee;
        }
    }
    
    if (counter == 0) //create first glow stripe
    {
        for (var i = 0; i &lt; 24; i++)
        {
            var glow = scrCreateWallGlow(currentGlow--);
            glow.lifetime = 10*i;
            glow.fadeIn = 0.2;
        }
    }
    else if (counter == 500)  //create start of second glow stripe
    {
        for (var i = 60; i &lt;= 84; i++) 
        {
            var glow = scrCreateWallGlow(i);
            glow.lifetime = 10*(84 - i);
            glow.image_blend = c_red;
        }
    }
    else if (global.avTimer == endTime - 80) instance_create(room_width/2, room_height/2, objExclamation);
    
    //create glow on the walls
    if (counter mod 14 == 0) 
    {
        if (counter &gt; 580)
        {
            var glow = scrCreateWallGlow(currentGlow + 42);
            glow.lifetime = 300;
        }
        var glow = scrCreateWallGlow(currentGlow--);
        glow.lifetime = 300;
    }
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
