<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAttack</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize vars
event_inherited();
startTime = 3015;
endTime = 3500;

numStreams = 3;

minBSpeed = 3;
maxBSpeed = 7;
shotInterval = 3;

rotation = 0; //the direction the center of the spray is aimed at
rotAmount = -2; //the number of degrees to rotate per frame

currentOffset = -15; //the amount of positional offset from the center for the next bullet
offsetIncrement = 3; //the amount to increase the offset by per shot
maxOffset = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (running)
{
    if (counter == 0)
    {
        with(objPlayer) other.rotation = point_direction(room_width/2, room_height/2, x, y) + (180/other.numStreams);
    }

    if (counter &gt; 50)
    {
        //rotate spray
        rotation += rotAmount;
    }
    
    if (counter mod shotInterval == 0)
    {
        for (var i = 0; i &lt; numStreams; i++)
        {
            //spawn a bullet and apply offsets
            var angle = rotation + (360/numStreams)*i;
            var bullet = instance_create(room_width/2, room_height/2, objStoneBullet);
            var offsetAngle = (angle - 90) mod 360;
            bullet.x += dcos(offsetAngle)*currentOffset;
            bullet.y += dsin(offsetAngle)*currentOffset;
            bullet.direction = angle + currentOffset;
            bullet.speed = random_range(minBSpeed, maxBSpeed);
            
            //update offset
            if (abs(currentOffset + offsetIncrement) &gt; maxOffset) offsetIncrement = -offsetIncrement;
            currentOffset += offsetIncrement;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
