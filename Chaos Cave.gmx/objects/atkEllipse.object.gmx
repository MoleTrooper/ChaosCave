<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objAttack</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize vars
event_inherited();
startTime = 8230;
endTime = 10000;

shotInterval = 25;
sectorSize = 60;
currentAngle = 0;

rockGrowing = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (running)
{    
    if (counter mod shotInterval == 0)
    {
        var bullet = instance_create(-10, -10, objStoneBulletP);
        bullet.curveType = 1;
        bullet.rootX = room_width/2;
        bullet.rootY = room_height/2;
        bullet.scaleX = 500;
        bullet.scaleY = 250;
        bullet.rotation = currentAngle + random_range(sectorSize/3, 2*sectorSize/3);
        bullet.tSpeed = 0.02;
        
        currentAngle += sectorSize;
    }
    
    with (objStoneBulletP)
    {
        scaleX -= t*0.5;
        scaleY -= t*0.25;
        tSpeed += 0.00005;
        if (scaleY &lt; 0)
        {
            other.rockGrowing = true;
            instance_destroy();
        }
    }
    
    if (rockGrowing)
    {
        with (objBigRock)
        {
            image_xscale += 0.02;
            image_yscale += 0.02;
            var fract = frac(image_xscale*10.0);
            if (fract &lt; .0001 || fract &gt; .9999) other.rockGrowing = false;
            //show_debug_message(string(image_xscale*10.0)+"-&gt;"+string(fract));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
